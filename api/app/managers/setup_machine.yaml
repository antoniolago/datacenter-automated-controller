---
- name: Ensure Python is installed and setup SSH keys
  hosts: all
  gather_facts: no
  tasks:
    - name: Install WinRM service on Windows
      win_feature:
        name: WinRM
        state: present
      when: ansible_os_family == 'Windows'

    - name: Configure WinRM service on Windows
      win_shell: |
        winrm quickconfig -q;
        winrm set winrm/config/service/auth @{Basic="true"};
        winrm set winrm/config/service @{AllowUnencrypted="true"};
        winrm set winrm/config/winrs @{MaxMemoryPerShellMB="1024"};
      when: ansible_os_family == 'Windows'

    - name: Ensure WinRM service is running on Windows
      win_service:
        name: winrm
        start_mode: auto
        state: started
      when: ansible_os_family == 'Windows'

    - name: Ensure Python is installed on Linux
      raw: |
        if command -v python3 > /dev/null 2>&1; then
          echo "Python3 is already installed";
        else
          if [ -f /etc/redhat-release ]; then
            sudo yum install -y python3;
          elif [ -f /etc/debian_version ]; then
            sudo apt-get update && sudo apt-get install -y python3;
          else
            echo "Unsupported OS";
            exit 1;
          fi
        fi
      when: ansible_os_family != 'Windows'
      changed_when: false

    - name: Ensure Python is installed on Windows
      win_chocolatey:
        name: python
        state: present
        version: latest
      when: ansible_os_family == 'Windows'
      changed_when: false
      
    - name: Ensure WOL is enabled on Windows
      win_shell: |
        $path = 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Power'
        set-itemproperty $path HiberbootEnabled 0 -type dword
        cctk --valsetuppwd=pass --wakeonlan=LanOnly --deepsleepctrl=disabled
      when: ansible_os_family == 'Windows'
      changed_when: false

    - name: Ensure Python is present on Linux
      command: /usr/bin/env python3 --version
      when: ansible_os_family != 'Windows'
      changed_when: false

    - name: Ensure Python is present on Windows
      win_command: python3 --version
      when: ansible_os_family == 'Windows'
      changed_when: false

    - name: Generate SSH key pair if not present (Linux)
      command: ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -q -N ""
      args:
        creates: /root/.ssh/id_rsa
      when: ansible_os_family != 'Windows'

    - name: Copy SSH public key to destination machine (Linux)
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
      when: ansible_os_family != 'Windows'

    - name: Ensure .ssh directory exists on the destination machine (Linux)
      file:
        path: /home/{{ ansible_user }}/.ssh
        state: directory
        mode: '0700'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      when: ansible_os_family != 'Windows'

    - name: Ensure authorized_keys file exists on the destination machine (Linux)
      file:
        path: /home/{{ ansible_user }}/.ssh/authorized_keys
        state: touch
        mode: '0600'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      when: ansible_os_family != 'Windows'

    - name: Append the public key to the authorized_keys file (Linux)
      lineinfile:
        path: /home/{{ ansible_user }}/.ssh/authorized_keys
        line: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
        state: present
      when: ansible_os_family != 'Windows'
