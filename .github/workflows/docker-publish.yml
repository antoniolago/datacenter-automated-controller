name: Build & publish Docker images

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: front/Dockerfile_deploy
            image: ghcr.io/antoniolago/datacenter-automated-controller-front
            context: ./front
            platform: linux/arm64
          - dockerfile: api/Dockerfile_deploy
            image: ghcr.io/antoniolago/datacenter-automated-controller-api
            context: ./
            platform: linux/arm64
          - dockerfile: nut/Dockerfile_deploy
            image: ghcr.io/antoniolago/datacenter-automated-controller-nut
            context: ./
            platform: linux/arm64
          - dockerfile: nut-launcher/Dockerfile_deploy
            image: ghcr.io/antoniolago/datacenter-automated-controller-nut-launcher
            context: ./
            platform: linux/arm64
          - dockerfile: rule-applier/Dockerfile
            image: ghcr.io/antoniolago/datacenter-automated-controller-rule-applier
            context: ./rule-applier
            platform: linux/arm64

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ env.REGISTRY }}/${{ matrix.image }}:${{ github.ref_name }}

      - name: Save tag as artifact
        run: echo "VERSION=${{ github.ref_name }}" > version.txt

      - name: Upload tag artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image-tag
          path: version.txt

  update-docker-compose:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download tag artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image-tag

      - name: Read tag from artifact
        id: read-tag
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Checkout or create deploy branch
        run: |
          git checkout -B deploy-rpi-sinprors

      - name: Update docker-compose-deploy.yml
        run: |
          sed -i "s|\${IMAGE_TAG}|${{ env.VERSION }}|g" docker-compose-deploy.yml
        shell: bash

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add docker-compose-deploy.yml
          git commit -m "Update docker-compose-deploy.yml with new image tag"
          git push origin deploy-rpi-sinprors --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
